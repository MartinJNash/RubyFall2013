Please Read: 
 - Chapter 6 Standard Types
 - Review Blocks
 - Chapter 7 Regular Expressions
 - Chapter 22 The Ruby Language: basic types (symbols), variables and constants

1. What is a symbol?

A symbol is a named identifier. It corresponds to a string of characters. A symbol will have the same memory address regardless of when and where it is called during execution of your program.

You can use a symbol anytime in your program, and don't need to predeclare it. There is no initialization -- Symbol does not respond to #new.

You would use a symbol where the value doesn't matter, but uniqueness does. Like the book's exapmle of compass directions. There's no need to have WEST = 1, or EAST = 223. All we want is the direction. (I suppose that you could make a case for west being 270 and east being 90, though).




2. What is the difference between a symbol and a string?

A symbol exists at a fixed location in memory regardless of when you call it during program execution. A string's address will change every time you make a new string.

10.times { puts "yodel".object_id }  # always different
10.times { puts :"yodel".object_id } # always same
10.times { puts :yodel.object_id }   # always same (identical to above)




3. What is a block and how do I call a block?

4. How do I pass a block to a method? What is the method signature?

5. Where would you use regular expressions?
